select(1:3, Type,"1950":"2020" )  |>
pivot_longer(cols=5:75,
names_to ="annee",
values_to = "population") |>
mutate(population=population*1000) |>
rename(region=3)
population_country<-population |>
filter(annee >= 1961) |>
select(annee, population, region) |>
mutate(country=countrycode(region, origin = "country.name", destination = "country.name")) |>
drop_na(country) |>
mutate(annee=(as.numeric(annee)))
ggplot(population_country |>
filter(country=='France'))+
aes(annee, population , fill=country)+
geom_col()
#Partie food
food<-read_delim("Production_Crops_Livestock_E_All_Data.csv",
locale=locale(encoding="ISO-8859-1")) |>
select(-ends_with("F")) |>
pivot_longer(cols=Y1961:Y2020,
names_to="annee",
values_to="Production_nourriture") |>
mutate(annee=parse_number(annee))
food_country <-food |>
filter(Element=="Production") |>
filter(str_detect(Item,"Total")|str_detect(Item,"Primary")) |>
rename(country=Area)
#rename(region=3)
ggplot(food_country |>
filter(country=='France'))+
aes(annee, Production_nourriture , fill=country)+
geom_col()
#Partie Energie
energy<-read_delim("owid-energy-data__OWID.csv")
seqTp_energy <- energy |>
select(1:3,contains("consumption")) |>
filter(year >= 1961 & year <= 2020) |>
pivot_longer(cols=4:16,
names_to="type_energie",
values_to="consommation") |>
mutate(types = case_when(str_detect(type_energie,"coal|gas|oil")~"fossil_fuel_consumption",
str_detect(type_energie,"nuclear|biofuel|hydro|other_renewable|solar|wind")~"low_carbon_consumption",
TRUE~NA_character_)) |>
mutate(sources_energy = case_when(str_detect(type_energie,"biofuel")~"biofuel",
str_detect(type_energie,"coal")~"coal",
str_detect(type_energie,"wind")~"wind",
str_detect(type_energie,"gas")~"gas",
str_detect(type_energie,"hydro")~"hydro",
str_detect(type_energie,"solar")~"solar",
str_detect(type_energie,"nuclear")~"nuclear",
str_detect(type_energie,"oil")~"oil",
str_detect(type_energie,"other_renewable")~"other_renewable_consumption"
))
energy_country<- seqTp_energy |>
rename(annee="year") |>
mutate(annee=(as.numeric(annee))) |>
drop_na(types)
ggplot(energy_country|>
filter(country=='France'))+
aes(annee,consommation,fill=country)+
geom_col()+
facet_grid(~types)+
labs(x="Annee", y="Consommation (TWh)")+
theme(axis.text.x=element_text(size=14,
angle=45,
hjust=1,
vjust=1),
axis.text.y=element_text(size=14,
hjust=1,
vjust=1),
strip.text.x=element_text(colour="black",
face="bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ui <- fluidPage(
titlePanel("Evolution de la population par pays depuis (1961 - 2020)"),
sidebarLayout(
sidebarPanel(
selectInput(inputId="PAYS",
label="Choisissez un pays",
choices=population_country |>
distinct(country) |>
arrange(country) |>
pull()
)
),
mainPanel(
column(width=4,
wellPanel(
titlePanel("Evolution de la nourriture"),
tableOutput(outputId="GRAPHIQUEN")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de la population"),
plotOutput(outputId="GRAPHIQUEP")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de l'energie"),
plotOutput(outputId="GRAPHIQUEE")
)
)
)
)
)
server <- function(input, output, session) {
filtre<-reactive({
population_country |>
filter(country==input$PAYS)
})
output$GRAPHIQUEP<-renderPlot({
ggplot(filtre())+
aes(annee, population , fill=country)+
geom_col()
})
#Partie_Nourriture
# filtre<-reactive ({
#
#   food_country |>
#     filter(country==input$PAYS)
#
# })
output$GRAPHIQUEN<-renderPlot({
ggplot(food_country |>
filter(country==input$PAYS))
aes(annee, Production_nourriture, fill=country)+
geom_col()
})
#Partie_Energie
output$GRAPHIQUEE<-renderPlot({
ggplot(energy_country |>
filter(country == input$PAYS))+
aes(annee, consommation , fill=country)+
geom_col()+
facet_grid(~types)
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Evolution de la population par pays depuis (1961 - 2020)"),
sidebarLayout(
sidebarPanel(
selectInput(inputId="PAYS",
label="Choisissez un pays",
choices=population_country |>
distinct(country) |>
arrange(country) |>
pull()
)
),
mainPanel(
column(width=4,
wellPanel(
titlePanel("Evolution de la nourriture"),
tableOutput(outputId="GRAPHIQUEN")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de la population"),
plotOutput(outputId="GRAPHIQUEP")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de l'energie"),
plotOutput(outputId="GRAPHIQUEE")
)
)
)
)
)
population<-read_excel("WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES_UN.xlsx", skip = 16, na="...") |>
select(1:3, Type,"1950":"2020" )  |>
pivot_longer(cols=5:75,
names_to ="annee",
values_to = "population") |>
mutate(population=population*1000) |>
rename(region=3)
population_country<-population |>
filter(annee >= 1961) |>
select(annee, population, region) |>
mutate(country=countrycode(region, origin = "country.name", destination = "country.name")) |>
drop_na(country) |>
mutate(annee=(as.numeric(annee)))
food<-read_delim("Production_Crops_Livestock_E_All_Data.csv",
locale=locale(encoding="ISO-8859-1")) |>
select(-ends_with("F")) |>
pivot_longer(cols=Y1961:Y2020,
names_to="annee",
values_to="Production_nourriture") |>
mutate(annee=parse_number(annee))
food_country <-food |>
filter(Element=="Production") |>
filter(str_detect(Item,"Total")|str_detect(Item,"Primary")) |>
rename(country=Area)
energy<-read_delim("owid-energy-data__OWID.csv")
seqTp_energy <- energy |>
select(1:3,contains("consumption")) |>
filter(year >= 1961 & year <= 2020) |>
pivot_longer(cols=4:16,
names_to="type_energie",
values_to="consommation") |>
mutate(types = case_when(str_detect(type_energie,"coal|gas|oil")~"fossil_fuel_consumption",
str_detect(type_energie,"nuclear|biofuel|hydro|other_renewable|solar|wind")~"low_carbon_consumption",
TRUE~NA_character_)) |>
mutate(sources_energy = case_when(str_detect(type_energie,"biofuel")~"biofuel",
str_detect(type_energie,"coal")~"coal",
str_detect(type_energie,"wind")~"wind",
str_detect(type_energie,"gas")~"gas",
str_detect(type_energie,"hydro")~"hydro",
str_detect(type_energie,"solar")~"solar",
str_detect(type_energie,"nuclear")~"nuclear",
str_detect(type_energie,"oil")~"oil",
str_detect(type_energie,"other_renewable")~"other_renewable_consumption"
))
energy_country<- seqTp_energy |>
rename(annee="year") |>
mutate(annee=(as.numeric(annee))) |>
drop_na(types)
ggplot(energy_country|>
filter(country=='France'))+
aes(annee,consommation,fill=country)+
geom_col()+
facet_grid(~types)+
labs(x="Annee", y="Consommation (TWh)")+
theme(axis.text.x=element_text(size=14,
angle=45,
hjust=1,
vjust=1),
axis.text.y=element_text(size=14,
hjust=1,
vjust=1),
strip.text.x=element_text(colour="black",
face="bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
View(energy_country)
energy_country<- seqTp_energy |>
rename(annee="year") |>
mutate(annee=(as.numeric(annee))) |>
drop_na(types) |>
drop_na(consommation)
energy_country<- seqTp_energy |>
rename(annee="year") |>
mutate(annee=(as.numeric(annee))) |>
drop_na(types) |>
drop_na(filter(is.na(consommation) & is.na(iso_code))
ggplot(energy_country|>
filter(country=='France'))+
aes(annee,consommation,fill=country)+
geom_col()+
facet_grid(~types)+
labs(x="Annee", y="Consommation (TWh)")+
theme(axis.text.x=element_text(size=14,
angle=45,
hjust=1,
vjust=1),
axis.text.y=element_text(size=14,
hjust=1,
vjust=1),
strip.text.x=element_text(colour="black",
face="bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
energy_country<- seqTp_energy |>
rename(annee="year") |>
mutate(annee=(as.numeric(annee))) |>
drop_na(types)
ggplot(energy_country|>
filter(country=='France'))+
aes(annee,consommation,fill=country)+
geom_col()+
facet_grid(~types)+
labs(x="Annee", y="Consommation (TWh)")+
theme(axis.text.x=element_text(size=14,
angle=45,
hjust=1,
vjust=1),
axis.text.y=element_text(size=14,
hjust=1,
vjust=1),
strip.text.x=element_text(colour="black",
face="bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ui <- fluidPage(
titlePanel("Evolution de la population par pays depuis (1961 - 2020)"),
sidebarLayout(
sidebarPanel(
selectInput(inputId="PAYS",
label="Choisissez un pays",
choices=population_country |>
distinct(country) |>
arrange(country) |>
pull()
)
),
mainPanel(
column(width=4,
wellPanel(
titlePanel("Evolution de la nourriture"),
tableOutput(outputId="GRAPHIQUEN")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de la population"),
plotOutput(outputId="GRAPHIQUEP")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de l'energie"),
plotOutput(outputId="GRAPHIQUEE")
)
)
)
)
)
population_country<-population |>
filter(annee >= 1961) |>
select(annee, population, region) |>
mutate(country=countrycode(region, origin = "country.name", destination = "country.name")) |>
drop_na(country) |>
mutate(annee=(as.numeric(annee)))
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(tidyverse)
library(lubridate)
library(readxl)
library(countrycode)
population<-read_excel("WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES_UN.xlsx", skip = 16, na="...") |>
select(1:3, Type,"1950":"2020" )  |>
pivot_longer(cols=5:75,
names_to ="annee",
values_to = "population") |>
mutate(population=population*1000) |>
rename(region=3)
population_country<-population |>
filter(annee >= 1961) |>
select(annee, population, region) |>
mutate(country=countrycode(region, origin = "country.name", destination = "country.name")) |>
drop_na(country) |>
mutate(annee=(as.numeric(annee)))
ggplot(population_country |>
filter(country=='France'))+
aes(annee, population , fill=country)+
geom_col()
#Partie food
food<-read_delim("Production_Crops_Livestock_E_All_Data.csv",
locale=locale(encoding="ISO-8859-1")) |>
select(-ends_with("F")) |>
pivot_longer(cols=Y1961:Y2020,
names_to="annee",
values_to="Production_nourriture") |>
mutate(annee=parse_number(annee))
food_country <-food |>
filter(Element=="Production") |>
filter(str_detect(Item,"Total")|str_detect(Item,"Primary")) |>
rename(country=Area)
#rename(region=3)
ggplot(food_country |>
filter(country=='France'))+
aes(annee, Production_nourriture , fill=country)+
geom_col()
#Partie Energie
energy<-read_delim("owid-energy-data__OWID.csv")
seqTp_energy <- energy |>
select(1:3,contains("consumption")) |>
filter(year >= 1961 & year <= 2020) |>
pivot_longer(cols=4:16,
names_to="type_energie",
values_to="consommation") |>
mutate(types = case_when(str_detect(type_energie,"coal|gas|oil")~"fossil_fuel_consumption",
str_detect(type_energie,"nuclear|biofuel|hydro|other_renewable|solar|wind")~"low_carbon_consumption",
TRUE~NA_character_)) |>
mutate(sources_energy = case_when(str_detect(type_energie,"biofuel")~"biofuel",
str_detect(type_energie,"coal")~"coal",
str_detect(type_energie,"wind")~"wind",
str_detect(type_energie,"gas")~"gas",
str_detect(type_energie,"hydro")~"hydro",
str_detect(type_energie,"solar")~"solar",
str_detect(type_energie,"nuclear")~"nuclear",
str_detect(type_energie,"oil")~"oil",
str_detect(type_energie,"other_renewable")~"other_renewable_consumption"
))
energy_country<- seqTp_energy |>
rename(annee="year") |>
mutate(annee=(as.numeric(annee))) |>
drop_na(types)
ggplot(energy_country|>
filter(country=='France'))+
aes(annee,consommation,fill=country)+
geom_col()+
facet_grid(~types)+
labs(x="Annee", y="Consommation (TWh)")+
theme(axis.text.x=element_text(size=14,
angle=45,
hjust=1,
vjust=1),
axis.text.y=element_text(size=14,
hjust=1,
vjust=1),
strip.text.x=element_text(colour="black",
face="bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ui <- fluidPage(
titlePanel("Evolution de la population par pays depuis (1961 - 2020)"),
sidebarLayout(
sidebarPanel(
selectInput(inputId="PAYS",
label="Choisissez un pays",
choices=population_country |>
distinct(country) |>
arrange(country) |>
pull()
)
),
mainPanel(
column(width=4,
wellPanel(
titlePanel("Evolution de la nourriture"),
tableOutput(outputId="GRAPHIQUEN")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de la population"),
plotOutput(outputId="GRAPHIQUEP")
)
),
column(width=4,
wellPanel(
titlePanel("Evolution de l'energie"),
plotOutput(outputId="GRAPHIQUEE")
)
)
)
)
)
server <- function(input, output, session) {
filtre<-reactive({
population_country |>
filter(country==input$PAYS)
})
output$GRAPHIQUEP<-renderPlot({
ggplot(filtre())+
aes(annee, population , fill=country)+
geom_col()
})
#Partie_Nourriture
# filtre<-reactive ({
#
#   food_country |>
#     filter(country==input$PAYS)
#
# })
output$GRAPHIQUEN<-renderPlot({
ggplot(food_country |>
filter(country==input$PAYS))
aes(annee, Production_nourriture, fill=country)+
geom_col()
})
#Partie_Energie
output$GRAPHIQUEE<-renderPlot({
ggplot(energy_country |>
filter(country == input$PAYS))+
aes(annee, consommation , fill=country)+
geom_col()+
facet_grid(~types)
})
}
shinyApp(ui, server)
shinyApp(ui, server)
shinyApp(ui, server)
View(food_country)
ggplot(food_country |>
filter(country=='France'))+
aes(annee, Production_nourriture , fill=country)+
geom_col()
server <- function(input, output, session) {
# filtre<-reactive({
#   population_country |>
#     filter(country==input$PAYS)
# })
# output$GRAPHIQUEP<-renderPlot({
#     ggplot(filtre())+
#     aes(annee, population , fill=country)+
#     geom_col()
# })
output$GRAPHIQUEN<-renderPlot({
ggplot(food_country |>
filter(country==input$PAYS))
aes(annee, Production_nourriture, fill=country)+
geom_col()
})
#    #Partie_Energie
#   output$GRAPHIQUEE<-renderPlot({
#     ggplot(energy_country |>
#       filter(country == input$PAYS))+
#     aes(annee, consommation , fill=country)+
#     geom_col()+
#       facet_grid(~types)
# })
}
shinyApp(ui, server)
